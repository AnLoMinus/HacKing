#!/bin/sh
#!/bin/sh
#!/bin/bash
#!/usr/bin/bash
#!/usr/bin/env bash
#!/data/data/com.termux/files/usr/bin/bash
###############################################
#     _   _            _  ___                 #
#    | | | | __ _  ___| |/ (_)_ __   __ _     #
#    | |_| |/ _' |/ __| ' /| | '_ \ / _' |    #
#    |  _  | (_| | (__| . \| | | | | (_| |    #
#    |_| |_|\__,_|\___|_|\_\_|_| |_|\__, |    #
#                                   |___/     #
###############################################
# Name : Nesle
# Description : Nesle is a hacking tools installer and package manager for hacker's.
# New Date : April 07 2022
# Aouther: Anlominus RhytMix 2022
# Skils: Best Copyrigter IN the COSMOS!
# BIG THANX TO ALL COMUNITY THAT SHARE ALL THAT FREE GREAT SCRIPTS
# CREDIT: ToAllWorldCreatorsHackingTools
# Location: Made With Love IN ISRAEL !
# Source: https://github.com/Anlominus/HacKing
###############################################
# |
###########################################################
#-----------) Function to Start All Variables (-----------#
###########################################################
# |
StartAllVariables(){
  ##################################
  #-----------) Colors (-----------#
  ##################################
  ColorsVariables(){
    nc="\033[00m"
    white="\033[1;37m"
    grey="\033[0;37m"
    purple="\033[0;35m"
    red="\033[31m"
    green="\033[32m"
    yellow="\033[33m"
    purple="\033[0;35m"
    cyan="\033[0;36m"
    cafe="\033[0;33m"
    fiuscha="\033[0;35m"
    blue="\033[34m"
    blueBG="\033[44m"
    orange="\033[38;5;202m"
    # |
    RED="$(printf '\033[31m')"
    GREEN="$(printf '\033[32m')"
    ORANGE="$(printf '\033[33m')"
    BLUE="$(printf '\033[34m')"
    MAGENTA="$(printf '\033[35m')"
    CYAN="$(printf '\033[36m')"
    WHITE="$(printf '\033[37m')"
    BLACK="$(printf '\033[30m')"
    REDBG="$(printf '\033[41m')"
    GREENBG="$(printf '\033[42m')"
    ORANGEBG="$(printf '\033[43m')"
    BLUEBG="$(printf '\033[44m')"
    MAGENTABG="$(printf '\033[45m')"
    CYANBG="$(printf '\033[46m')"
    WHITEBG="$(printf '\033[47m')"
    BLACKBG="$(printf '\033[40m')"
    RESETBG="$(printf '\e[0m')"
    BLINK="$(printf '\033[5;31m')"
  }
  ColorsVariables
  ###################################
  #-----------) Letters (-----------#
  ###################################
  LettersVariables(){
    nr="R"
    ni="I"
    nt="T"
    nx="X"
    nq="Q"
    na="A"
    nb="ab"
    n00="00"
    n1="1"
    n2="2"
    n3="3"
    n4="4"
    n5="5"
    n6="6"
    n8="8"
    n7="7"
    n9="9"
    n10="10"
    n11="11"
    n12="12"
    n13="13"
    n14="14"
    n15="15"
    n16="16"
    n17="17"
    n18="18"
  }
  LettersVariables
  ##########################
  #    Words Variables     #
  ##########################
  WordsVariables(){
    cNotFound="$red[${orange}Not Found${red}]$grey"
    cFound="$red[${orange}Found${red}]$grey"
    cBack="$red[$cyan Back $red]$grey"
    uSage="$red[$cyan USAGE $red]$grey("
    installingDir="$red[$grey Installing Dir $red]$cyan"
  }
  WordsVariables
  #############################
  #    Symbolls Variables     #
  #############################
  SymbollsVariables(){
    # 💪 ☠️ 🚶
    # 🗨 👩‍ 💻 😜 😡
    # 💥 ✍ █ ▓ ░ ▒ 💿 🎧 📸
    # 👤 ️📚 🌐 ❗ ✳️ 🛡️ 🎭
    cEye="$green 👁 $cyan"
    cStar="$orange[$red✯$orange]$cyan"
    cWell="$orange[$red👌$orange]$cyan"
    cPin="$orange[$red📌$orange]$cyan"
    cNetworks="$orange[$red🖧$orange]$cyan"
    cWorld="$orange[$red🌐$orange]$cyan"
    cToxic="$orange[$red☣$orange]$cyan"
    cHeart="$orange[$red♥️$orange]$cyan"
    cTools="$orange[$red🛠$orange]$cyan"
    cLike="$orange[$red👍$orange]$cyan"
    cElectric="$orange[$red⚡$orange]$cyan"
    cSkull="$orange[$red💀$orange]$cyan"
    cFlag="$orange[$red🏴$orange]$cyan"
    c18Plus="$orange[$red🔞$orange]$cyan"
    cWall="$purple[$purple░$purple]$cyan"
    cDock="$purple[$green📌$purple]$cyan"
    cPassKey="$purple[$green🔐$purple]$cyan"
    cAnlominus="$purple[$green👽$purple]$cyan"
    cAlien="$purple[$green🙏$purple]$cyan"
    cGlasses="$purple[$green👓$purple]$yellow"
    cLock="$red[$yellow🔒$red]$grey"
    cInvalid="$red[$yellow🚫$red]$red"
    cKey="$red[$yellow🔑$red]$yellow"
    cLink="$red[$orange🔗$red]$orange"
    cSharp="$red[$yellow#$red]$blue"
    cInfo="$red[$yellow!$red]$blue"
    cPlus="$red[$green+$red]$orange"
    cDone="$red[$green✔$red]$green"
    cFalse="$yellow[$red✘$yellow]$red"
    cDanger="$yellow ⚠️ $red"
  }
  SymbollsVariables
  ########################
  #    Bar Variables     #
  ########################
  BarVariables(){
    vBar="${RESETBG}${grey}[█ ▓ ░ ▒ ▒▒▒████████▒▒▒ ▒ ░ ▓ █${orange}]${RESETBG}\n"
    vSys="${BLACKBG}${grey}[█ ▓ ░ ▒ ▒▒▒█ SYSTEM █▒▒▒ ▒ ░ ▓ █${orange}]${RESETBG}\n"
    vInst="${BLACKBG}${orange}[█ ▓ ░ ▒ ▒▒▒█ INSTALL █▒▒▒ ▒ ░ ▓ █${orange}]${RESETBG}\n"
  }
  BarVariables
  ############################
  #    Numbers Variables     #
  ############################
  NumbersVariables(){
    cr="$orange[$green$nr$orange]$grey"
    ci="$orange[$green$ni$orange]$grey"
    ct="$orange[$green$nt$orange]$grey"
    cx="$orange[$green$nx$orange]$grey"
    cq="$orange[$green$nq$orange]$grey"
    ca="$orange[$green$na$orange]$grey"
    cb="$orange[$green$nb$orange]$grey"
    c1="$orange[$green$n1$orange]$cafe"
    c2="$orange[$green$n2$orange]$cafe"
    c3="$orange[$green$n3$orange]$cafe"
    c4="$orange[$green$n4$orange]$cafe"
    c5="$orange[$green$n5$orange]$cafe"
    c6="$orange[$green$n6$orange]$cafe"
    c7="$orange[$green$n7$orange]$cafe"
    c8="$orange[$green$n8$orange]$cafe"
    c9="$orange[$green$n9$orange]$cafe"
    c10="$orange[$green$n10$orange]$cafe"
    c11="$orange[$green$n11$orange]$cafe"
    c12="$orange[$green$n12$orange]$cafe"
    c13="$orange[$green$n13$orange]$cafe"
    c14="$orange[$green$n14$orange]$cafe"
    c15="$orange[$green$n15$orange]$cafe"
    c16="$orange[$green$n16$orange]$cafe"
    c17="$orange[$green$n17$orange]$cafe"
    c18="$orange[$green$n18$orange]$cafe"
  }
  NumbersVariables
  #############################
  #    Commands Variables     #
  ###############$$############
  currentDir="${blue}Dir$orange $(pwd)"
  SysInfo="${blue}SysInfo$orange $(uname)"
}
# |
StartAllVariables
# |

nc="\033[00m"
red="\033[01;31m"
green="\033[01;32m"
yellow="\033[01;33m"
blue="\033[01;34m"
purple="\033[01;35m"
cyan="\033[01;36m"

logo="${yellow}
  ___  _ __   ___${red}__  __
${yellow} / _ \\| '_ \\ / _ ${red}\\ \\/ /
${yellow}| (_) | | | |  __/${red}>  <
${yellow} \___/|_| |_|\\___${red}/_/\_\\
"

# checking for system home dir
if [ -d $HOME ]; then
  home=$HOME
else
  home="~/"
fi

# checking for system bin dir
if [ -d /data/data/com.termux/files/usr/bin ]; then
  bin="/data/data/com.termux/files/usr/bin"
elif [ -d /usr/local/bin ]; then
  bin="/usr/local/bin"
elif [ -d /bin ]; then
  bin="/bin"
elif [ -d /sbin ]; then
  bin="/sbin"
fi

# checking for configuration dir
if [ -d /data/data/com.termux/files/usr/etc ]; then
  conf_dir="/data/data/com.termux/files/usr/etc"
elif [ -d /etc ]; then
  conf_dir="/etc"
fi

# configuration files
if [ -d $conf_dir/Nesle ]; then
  if [ -e $conf_dir/Nesle/data/tools.dat ]; then
    tools_data="$conf_dir/Nesle/data/tools.dat"
  fi
  if [ -e $conf_dir/Nesle/data/category.dat ]; then
    category_data="$conf_dir/Nesle/data/category.dat"
  fi
else
  if [ -e data/tools.dat ]; then
    tools_data="data/tools.dat"
  fi
  if [ -e data/category.dat ]; then
    category_data="data/category.dat"
  fi
fi

# checking for system root access
if [ `command -v sudo` ]; then
  sudo="sudo"
else
  sudo=""
fi

# checking for system package manager
if [ -e /data/data/com.termux/files/usr/bin/pkg ]; then
  pac="pkg"
  system="termux"
elif [ `command -v apt` ]; then
  pac="apt"
  system="linux"
elif [ `command -v apt-get` ]; then
  pac="apt-get"
  system="linux"
elif [ `command -v apk` ]; then
  pac="apk"
  system="linux"
elif [ `command -v yum` ]; then
  pac="yum"
  system="fedora"
elif [ `command -v brew` ]; then
  pac="brew"
  system="mac"
  sudo=""
fi

# setup process
clear
echo "$logo"
echo "${green} Installing .... ${nc}"
sleep 1
echo "${yellow} Running setup .... ${nc}"
sleep 1

# installing dependency
for each_pac in "wget" "curl" "git"; do
  if [ ! `command -v $each_pac` ]; then
    if [ $sudo ]; then
      $sudo $pac install $each_pac -y
    else
      $pac install $each_pac -y
    fi
  fi
done

# removing old one
if [ -e $bin/Nesle ]; then
  if [ -d $conf_dir/Nesle ]; then
    if [ $sudo ]; then
      $sudo rm -rf $bin/Nesle
      $sudo rm -rf $conf_dir/Nesle
    else
      rm -rf $bin/Nesle
      rm -rf $conf_dir/Nesle
    fi
  fi
fi

# install Nesle
if [ $0 = "install" -o $0 = "./install" ]; then
  if [ -e Nesle ]; then
    if [ $sudo ]; then
      $sudo mv -v Nesle $bin
      $sudo chmod +x $bin/Nesle
    else
      mv -v Nesle $bin
      chmod +x $bin/Nesle
    fi
  fi
  cd ..
  if [ -d Nesle ]; then
    if [ $sudo ]; then
    $sudo mv -v Nesle $conf_dir
    else
      mv -v Nesle $conf_dir
    fi
  fi
else
  if [ -e Nesle/Nesle ]; then
    if [ $sudo ]; then
      $sudo mv -v Nesle/Nesle $bin
      $sudo chmod +x $bin/Nesle
    else
      mv -v Nesle/Nesle $bin
      chmod +x $bin/Nesle
    fi
  fi
  if [ -d Nesle ]; then
    if [ $sudo ]; then
    $sudo mv -v Nesle $conf_dir
    else
      mv -v Nesle $conf_dir
    fi
  fi
fi

# check Nesle is installed or not
if [ -e $bin/Nesle ]; then
  if [ -d $conf_dir/Nesle ]; then
    clear
    echo "$logo"
    echo " ${purple}Nesle ${green}installed successfully !!"
    echo " ${green}type ${nc}'Nesle -h'${green} for more.${nc}"
  else
    clear
    echo "$logo"
    echo " ${red}Sorry ${cyan}: Nesle ${red}is not installed !!"
    echo " ${green}Please try again${nc}"
  fi
fi
